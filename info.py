"""
‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±–æ—Ç–∞ DianaLisa
FAQ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–∞—Ö, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –¥—Ä—É–≥–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
"""

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from telegram.constants import ParseMode

from config import MESSAGES, BUTTONS
from keyboards import Keyboards
keyboards = Keyboards()
from database import db

logger = logging.getLogger(__name__)

class InfoSystem:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏"""
    
    def __init__(self):
        self.faq_data = self.load_faq_data()
        self.course_info = self.load_course_info()
        self.support_info = self.load_support_info()
    
    def load_faq_data(self) -> dict:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö FAQ"""
        return {
            'general': {
                'title': '‚ùì –û–ë–©–ò–ï –í–û–ü–†–û–°–´',
                'questions': [
                    {
                        'question': '–ö–∞–∫ —á–∞—Å—Ç–æ –Ω—É–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è?',
                        'answer': '–î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ 3-4 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é. –ì–ª–∞–≤–Ω–æ–µ - —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å, –∞ –Ω–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å.'
                    },
                    {
                        'question': '–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏–ª –¥–µ–Ω—å?',
                        'answer': '–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π! –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∏ —Å —Ç–æ–≥–æ –º–µ—Å—Ç–∞, –≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è. –ì–ª–∞–≤–Ω–æ–µ - –Ω–µ –±—Ä–æ—Å–∞—Ç—å.'
                    },
                    {
                        'question': '–ù—É–∂–Ω–æ –ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ?',
                        'answer': '–ù–µ—Ç! –í—Å–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ–º–∞ –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.'
                    },
                    {
                        'question': '–ö–∞–∫ –¥–æ–ª–≥–æ –¥–ª–∏—Ç—Å—è –∫—É—Ä—Å?',
                        'answer': '–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å - 3 –¥–Ω—è, –ø–æ–ª–Ω—ã–π –∫—É—Ä—Å - 30 –¥–Ω–µ–π. –ú–æ–∂–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –≤ —Å–≤–æ–µ–º —Ç–µ–º–ø–µ.'
                    }
                ]
            },
            'training': {
                'title': 'üèãÔ∏è‚Äç‚ôÄÔ∏è –í–û–ü–†–û–°–´ –û –¢–†–ï–ù–ò–†–û–í–ö–ê–•',
                'questions': [
                    {
                        'question': '–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω–æ–µ?',
                        'answer': '–£–ø—Ä–æ—Å—Ç–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –∏–ª–∏ –¥–µ–ª–∞–π –º–µ–Ω—å—à–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π. –õ—É—á—à–µ —Å–¥–µ–ª–∞—Ç—å –º–µ–Ω—å—à–µ, –Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.'
                    },
                    {
                        'question': '–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –≤–æ –≤—Ä–µ–º—è –º–µ—Å—è—á–Ω—ã—Ö?',
                        'answer': '–î–∞, –Ω–æ —Å–ª—É—à–∞–π —Å–≤–æ–µ —Ç–µ–ª–æ. –ï—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–ª–∞–±–æ—Å—Ç—å, —Å–¥–µ–ª–∞–π –ª–µ–≥–∫—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É.'
                    },
                    {
                        'question': '–ö–∞–∫ –ø–æ–Ω—è—Ç—å, —á—Ç–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞?',
                        'answer': '–ï—Å–ª–∏ –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —á—É–≤—Å—Ç–≤—É–µ—à—å –ª–µ–≥–∫—É—é —É—Å—Ç–∞–ª–æ—Å—Ç—å –∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ.'
                    },
                    {
                        'question': '–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –±–æ–ª—è—Ç –º—ã—à—Ü—ã?',
                        'answer': '–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ! –î–µ–ª–∞–π —Ä–∞—Å—Ç—è–∂–∫—É, –ø—Ä–∏–Ω–∏–º–∞–π —Ç–µ–ø–ª—ã–π –¥—É—à, –ø–µ–π –±–æ–ª—å—à–µ –≤–æ–¥—ã.'
                    }
                ]
            },
            'technical': {
                'title': 'üîß –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –í–û–ü–†–û–°–´',
                'questions': [
                    {
                        'question': '–ù–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è',
                        'answer': '–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Telegram. –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å.'
                    },
                    {
                        'question': '–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å?',
                        'answer': '–ù–∞–ø–∏—à–∏ /start –∏ –ø—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ, –≤—ã–±—Ä–∞–≤ –Ω—É–∂–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å.'
                    },
                    {
                        'question': '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø–ª–∞—Ç–∞',
                        'answer': '–£–±–µ–¥–∏—Å—å, —á—Ç–æ —É —Ç–µ–±—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è Telegram. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.'
                    },
                    {
                        'question': '–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π?',
                        'answer': '–ù–∞–ø–∏—à–∏ @DianaLisaSupport –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É "–ü–æ–¥–¥–µ—Ä–∂–∫–∞" –≤ –º–µ–Ω—é.'
                    }
                ]
            }
        }
    
    def load_course_info(self) -> dict:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–∞—Ö"""
        return {
            'basic_course': {
                'title': 'üíé –ë–ê–ó–û–í–´–ô –ö–£–†–°',
                'duration': '30 –¥–Ω–µ–π',
                'price': '990 ‚ÇΩ',
                'description': '–ò–¥–µ–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤',
                'features': [
                    '30 –¥–Ω–µ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
                    '–ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ –º–µ—Å—è—Ü',
                    '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ —á–∞—Ç–µ',
                    '–î–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º',
                    '–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è',
                    '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞'
                ],
                'target': '–î–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç —Å–≤–æ–π –ø—É—Ç—å –∫ –∑–¥–æ—Ä–æ–≤–æ–º—É –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏'
            },
            'premium_course': {
                'title': 'üî• –ü–†–ï–ú–ò–£–ú –ö–£–†–°',
                'duration': '30 –¥–Ω–µ–π',
                'price': '1990 ‚ÇΩ',
                'description': '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º —Ç—Ä–µ–Ω–µ—Ä–æ–º',
                'features': [
                    '30 –¥–Ω–µ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
                    '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä',
                    '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
                    '–í–∏–¥–µ–æ-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏',
                    '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7',
                    '–ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è',
                    '–î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É —á–∞—Ç—É',
                    '–ë–æ–Ω—É—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'
                ],
                'target': '–î–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º'
            },
            'vip_course': {
                'title': 'üëë VIP –ö–£–†–°',
                'duration': '30 –¥–Ω–µ–π',
                'price': '2990 ‚ÇΩ',
                'description': '–ü–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞',
                'features': [
                    '30 –¥–Ω–µ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
                    '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä',
                    '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
                    '–í–∏–¥–µ–æ-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏',
                    '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7',
                    '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è',
                    '–î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É —á–∞—Ç—É',
                    '–ë–æ–Ω—É—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
                    '–ì–∞—Ä–∞–Ω—Ç–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞',
                    '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
                    '–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞'
                ],
                'target': '–î–ª—è —Ç–µ—Ö, –∫—Ç–æ –≥–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Å–µ–±—è –∏ –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç'
            }
        }
    
    def load_support_info(self) -> dict:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ"""
        return {
            'contact_methods': [
                {
                    'name': 'Telegram',
                    'value': '@DianaLisaSupport',
                    'description': '–ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã –≤ —á–∞—Ç–µ'
                },
                {
                    'name': 'Email',
                    'value': 'support@dianalisa.com',
                    'description': '–ü–æ–¥—Ä–æ–±–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏'
                },
                {
                    'name': '–¢–µ–ª–µ—Ñ–æ–Ω',
                    'value': '+7 (999) 123-45-67',
                    'description': '–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
                }
            ],
            'working_hours': '9:00 - 21:00 (–ú–°–ö)',
            'response_time': '–û–±—ã—á–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞',
            'common_issues': [
                '–ü—Ä–æ–±–ª–µ–º—ã —Å –æ–ø–ª–∞—Ç–æ–π',
                '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏',
                '–í–æ–ø—Ä–æ—Å—ã –ø–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º',
                '–ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º'
            ]
        }
    
    async def show_faq(self, query, category: str = 'general'):
        """–ü–æ–∫–∞–∑ FAQ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        try:
            if category not in self.faq_data:
                category = 'general'
            
            faq = self.faq_data[category]
            
            faq_text = f"{faq['title']}\n\n"
            
            for i, qa in enumerate(faq['questions'], 1):
                faq_text += f"{i}. ‚ùì {qa['question']}\n"
                faq_text += f"üí° {qa['answer']}\n\n"
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            keyboard = [
                [
                    InlineKeyboardButton("‚ùì –û–±—â–∏–µ", callback_data='faq_general'),
                    InlineKeyboardButton("üèãÔ∏è‚Äç‚ôÄÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", callback_data='faq_training')
                ],
                [
                    InlineKeyboardButton("üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ", callback_data='faq_technical')
                ],
                [InlineKeyboardButton("üîô –í –º–µ–Ω—é", callback_data='main_menu')]
            ]
            
            await query.edit_message_text(
                faq_text,
                reply_markup=InlineKeyboardMarkup(keyboard),
                parse_mode=ParseMode.HTML
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ FAQ: {e}")
            await query.edit_message_text(
                "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ FAQ.",
                reply_markup=keyboards.back_to_main()
            )
    
    async def show_course_info(self, query, course_type: str):
        """–ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ"""
        try:
            if course_type not in self.course_info:
                await query.edit_message_text(
                    "‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.",
                    reply_markup=keyboards.back_to_main()
                )
                return
            
            course = self.course_info[course_type]
            
            course_text = f"""
{course['title']}

üí∞ –¶–µ–Ω–∞: {course['price']}
‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {course['duration']}

üìù –û–ø–∏—Å–∞–Ω–∏–µ:
{course['description']}

üéØ –î–ª—è –∫–æ–≥–æ:
{course['target']}

‚ú® –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç:
            """
            
            for feature in course['features']:
                course_text += f"‚Ä¢ {feature}\n"
            
            keyboard = [
                [InlineKeyboardButton("üí≥ –ö—É–ø–∏—Ç—å –∫—É—Ä—Å", callback_data=f'buy_{course_type}')],
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='full_course')]
            ]
            
            await query.edit_message_text(
                course_text,
                reply_markup=InlineKeyboardMarkup(keyboard),
                parse_mode=ParseMode.HTML
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ: {e}")
            await query.edit_message_text(
                "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ.",
                reply_markup=keyboards.back_to_main()
            )
    
    async def show_support_info(self, query):
        """–ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ"""
        try:
            support_text = f"""
üìû –ü–û–î–î–ï–†–ñ–ö–ê

‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {self.support_info['working_hours']}
‚ö° –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {self.support_info['response_time']}

üì± –°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏:
            """
            
            for method in self.support_info['contact_methods']:
                support_text += f"‚Ä¢ {method['name']}: {method['value']}\n"
                support_text += f"  {method['description']}\n\n"
            
            support_text += "üîß –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:\n"
            for issue in self.support_info['common_issues']:
                support_text += f"‚Ä¢ {issue}\n"
            
            keyboard = [
                [InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", url="https://t.me/DianaLisaSupport")],
                [InlineKeyboardButton("üìß Email", url="mailto:support@dianalisa.com")],
                [InlineKeyboardButton("üîô –í –º–µ–Ω—é", callback_data='main_menu')]
            ]
            
            await query.edit_message_text(
                support_text,
                reply_markup=InlineKeyboardMarkup(keyboard),
                parse_mode=ParseMode.HTML
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ: {e}")
            await query.edit_message_text(
                "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ.",
                reply_markup=keyboards.back_to_main()
            )
    
    async def show_about(self, query):
        """–ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ"""
        try:
            about_text = """
ü§ñ –û –ë–û–¢–ï DIANALISA

üëã –ü—Ä–∏–≤–µ—Ç! –Ø DianaLisa - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–µ—Ä –≤ Telegram!

üéØ –ú–æ—è —Ü–µ–ª—å - –ø–æ–º–æ—á—å —Ç–µ–±–µ:
‚Ä¢ –ù–∞—á–∞—Ç—å –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º
‚Ä¢ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∑–¥–æ—Ä–æ–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏
‚Ä¢ –î–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π
‚Ä¢ –ü–æ–ª—é–±–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏

‚ú® –ß—Ç–æ —è —É–º–µ—é:
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
‚Ä¢ –ú–æ—Ç–∏–≤–∞—Ü–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
‚Ä¢ –°–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é
‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö

üí™ –ù–∞—á–Ω–∏ —Å–≤–æ–π –ø—É—Ç—å –∫ –∑–¥–æ—Ä–æ–≤–æ–π –∂–∏–∑–Ω–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!

üìÖ –í–µ—Ä—Å–∏—è: 1.0.0
üïí –û–±–Ω–æ–≤–ª–µ–Ω–æ: 2024
            """
            
            await query.edit_message_text(
                about_text,
                reply_markup=keyboards.back_to_main(),
                parse_mode=ParseMode.HTML
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {e}")
            await query.edit_message_text(
                "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ.",
                reply_markup=keyboards.back_to_main()
            )
    
    async def show_privacy_policy(self, query):
        """–ü–æ–∫–∞–∑ –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏"""
        try:
            privacy_text = """
üîí –ü–û–õ–ò–¢–ò–ö–ê –ö–û–ù–§–ò–î–ï–ù–¶–ò–ê–õ–¨–ù–û–°–¢–ò

üìã –ú—ã —Å–æ–±–∏—Ä–∞–µ–º –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º:
‚Ä¢ –ò–º—è –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
‚Ä¢ –î–∞–Ω–Ω—ã–µ –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞

üõ°Ô∏è –ú—ã –∑–∞—â–∏—â–∞–µ–º:
‚Ä¢ –í—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–∞—Ö
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫

‚ùå –ú—ã –ù–ï –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º

‚úÖ –¢—ã –º–æ–∂–µ—à—å:
‚Ä¢ –£–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
‚Ä¢ –û—Ç–æ–∑–≤–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ
‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö

üìß –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º: privacy@dianalisa.com
            """
            
            await query.edit_message_text(
                privacy_text,
                reply_markup=keyboards.back_to_main(),
                parse_mode=ParseMode.HTML
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏: {e}")
            await query.edit_message_text(
                "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.",
                reply_markup=keyboards.back_to_main()
            )
    
    async def show_terms_of_service(self, query):
        """–ü–æ–∫–∞–∑ —É—Å–ª–æ–≤–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
        try:
            terms_text = """
üìú –£–°–õ–û–í–ò–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø

‚úÖ –ò—Å–ø–æ–ª—å–∑—É—è –±–æ—Ç–∞, —Ç—ã —Å–æ–≥–ª–∞—à–∞–µ—à—å—Å—è:
‚Ä¢ –°–ª–µ–¥–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º —Ç—Ä–µ–Ω–µ—Ä–∞
‚Ä¢ –ù–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –£–≤–∞–∂–∞—Ç—å –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

üö´ –ó–∞–ø—Ä–µ—â–µ–Ω–æ:
‚Ä¢ –°–ø–∞–º–∏—Ç—å –∏–ª–∏ —Ñ–ª—É–¥–∏—Ç—å
‚Ä¢ –ù–∞—Ä—É—à–∞—Ç—å –∞–≤—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —Ü–µ–ª—è—Ö

‚öñÔ∏è –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å:
‚Ä¢ –¢—Ä–µ–Ω–∏—Ä—É–π—Å—è –Ω–∞ —Å–≤–æ–π —Å—Ç—Ä–∞—Ö –∏ —Ä–∏—Å–∫
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Å—è —Å –≤—Ä–∞—á–æ–º –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
‚Ä¢ –°–ª–µ–¥—É–π —Ç–µ—Ö–Ω–∏–∫–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏—è:
‚Ä¢ –£—Å–ª–æ–≤–∏—è –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ –±–æ—Ç–µ

üìß –í–æ–ø—Ä–æ—Å—ã: legal@dianalisa.com
            """
            
            await query.edit_message_text(
                terms_text,
                reply_markup=keyboards.back_to_main(),
                parse_mode=ParseMode.HTML
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —É—Å–ª–æ–≤–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: {e}")
            await query.edit_message_text(
                "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—Å–ª–æ–≤–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.",
                reply_markup=keyboards.back_to_main()
            )

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
info_system = InfoSystem()
