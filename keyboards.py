"""
‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±–æ—Ç–∞ DianaLisa
–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
"""

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from config import BUTTONS

class Keyboards:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –±–æ—Ç–∞"""
    
    @staticmethod
    def main_menu() -> InlineKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
        try:
            keyboard = [
                [InlineKeyboardButton(BUTTONS['start_training'], callback_data='start_training')],
                [InlineKeyboardButton(BUTTONS['faq'], callback_data='faq')],
                [
                    InlineKeyboardButton(BUTTONS['full_course'], callback_data='full_course'),
                    InlineKeyboardButton(BUTTONS['online_training'], callback_data='online_training')
                ],
                [InlineKeyboardButton(BUTTONS['contact_support'], callback_data='contact_support')]
            ]
            return InlineKeyboardMarkup(keyboard)
        except Exception as e:
            # Fallback - –ø—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é
            keyboard = [
                [InlineKeyboardButton("üèãÔ∏è‚Äç‚ôÄÔ∏è –ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", callback_data='start_training')],
                [InlineKeyboardButton("‚ùì FAQ", callback_data='faq')]
            ]
            return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def training_menu(day: int) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ day
            if not isinstance(day, int) or day < 1:
                day = 1  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            
            keyboard = []
            
            # –î–µ–Ω—å 1 - –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω
            keyboard.append([InlineKeyboardButton("üèãÔ∏è‚Äç‚ôÄÔ∏è –î–µ–Ω—å 1 - –ë–∞–∑–æ–≤–∞—è —Ä–∞–∑–º–∏–Ω–∫–∞", callback_data='training_day_1')])
            
            # –î–µ–Ω—å 2 - –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ current_day >= 2
            if day >= 2:
                keyboard.append([InlineKeyboardButton("üèãÔ∏è‚Äç‚ôÄÔ∏è –î–µ–Ω—å 2 - –°–∏–ª–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è", callback_data='training_day_2')])
            else:
                keyboard.append([InlineKeyboardButton("üîí –î–µ–Ω—å 2 - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (–∑–∞–≤–µ—Ä—à–∏—Ç–µ –î–µ–Ω—å 1)", callback_data='noop')])
            
            # –î–µ–Ω—å 3 - –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ current_day >= 3
            if day >= 3:
                keyboard.append([InlineKeyboardButton("üèãÔ∏è‚Äç‚ôÄÔ∏è –î–µ–Ω—å 3 - –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", callback_data='training_day_3')])
            else:
                keyboard.append([InlineKeyboardButton("üîí –î–µ–Ω—å 3 - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (–∑–∞–≤–µ—Ä—à–∏—Ç–µ –î–µ–Ω—å 2)", callback_data='noop')])
            
            keyboard.append([InlineKeyboardButton(BUTTONS['back_to_menu'], callback_data='main_menu')])
            
            return InlineKeyboardMarkup(keyboard)
        except Exception as e:
            # Fallback - –ø—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é
            keyboard = [
                [InlineKeyboardButton("üèãÔ∏è‚Äç‚ôÄÔ∏è –î–µ–Ω—å 1 - –ë–∞–∑–æ–≤–∞—è —Ä–∞–∑–º–∏–Ω–∫–∞", callback_data='training_day_1')],
                [InlineKeyboardButton(BUTTONS['back_to_menu'], callback_data='main_menu')]
            ]
            return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def like_dislike_menu(day: int) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (–ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å/–Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å)"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ day
            if not isinstance(day, int) or day < 1:
                day = 1  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            
            keyboard = [
                [InlineKeyboardButton("üòä –ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å", callback_data=f'feedback_like_{day}')],
                [InlineKeyboardButton("üòû –ù–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å", callback_data=f'feedback_dislike_{day}')]
            ]
            return InlineKeyboardMarkup(keyboard)
        except Exception as e:
            # Fallback - –ø—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é
            keyboard = [
                [InlineKeyboardButton("üòä –ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å", callback_data='feedback_like_1')],
                [InlineKeyboardButton("üòû –ù–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å", callback_data='feedback_dislike_1')]
            ]
            return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def text_input_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ (–æ—Ç–º–µ–Ω–∞)"""
        try:
            keyboard = [
                [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data='main_menu')]
            ]
            return InlineKeyboardMarkup(keyboard)
        except Exception as e:
            # Fallback - –ø—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é
            keyboard = [
                [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data='main_menu')]
            ]
            return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def payment_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –æ–ø–ª–∞—Ç—ã"""
        try:
            keyboard = [
                [InlineKeyboardButton(BUTTONS['buy_course'], callback_data='buy_course')],
                [InlineKeyboardButton(BUTTONS['buy_training'], callback_data='buy_training')],
                [InlineKeyboardButton(BUTTONS['back_to_menu'], callback_data='main_menu')]
            ]
            return InlineKeyboardMarkup(keyboard)
        except Exception as e:
            # Fallback - –ø—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é
            keyboard = [
                [InlineKeyboardButton("üí≥ –ö—É–ø–∏—Ç—å –∫—É—Ä—Å", callback_data='buy_course')],
                [InlineKeyboardButton("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')]
            ]
            return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_menu() -> InlineKeyboardMarkup:
        """–ê–¥–º–∏–Ω—Å–∫–æ–µ –º–µ–Ω—é"""
        try:
            keyboard = [
                [InlineKeyboardButton(BUTTONS['user_stats'], callback_data='admin_stats')],
                [InlineKeyboardButton(BUTTONS['send_message'], callback_data='admin_send_message')],
                [InlineKeyboardButton(BUTTONS['export_db'], callback_data='admin_export_db')],
                [InlineKeyboardButton("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data='admin_analytics')],
                [InlineKeyboardButton("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data='admin_users')],
                [InlineKeyboardButton("üí∞ –ü–ª–∞—Ç–µ–∂–∏", callback_data='admin_payments')],
                [InlineKeyboardButton("‚≠ê –û—Ç–∑—ã–≤—ã", callback_data='admin_reviews')],
                [InlineKeyboardButton("üí™ –û—Ç–∑—ã–≤—ã –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö", callback_data='admin_training_feedback')],
                [InlineKeyboardButton("üóë –û—á–∏—Å—Ç–∏—Ç—å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞", callback_data='admin_clear_db')],
                [InlineKeyboardButton(BUTTONS['back_to_menu'], callback_data='main_menu')]
            ]
            return InlineKeyboardMarkup(keyboard)
        except Exception as e:
            # Fallback - –ø—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é
            keyboard = [
                [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='admin_stats')],
                [InlineKeyboardButton("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')]
            ]
            return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_main_menu() -> InlineKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ (–≤–∫–ª—é—á–∞–µ—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å)"""
        try:
            keyboard = [
                [InlineKeyboardButton(BUTTONS['start_training'], callback_data='start_training')],
                [InlineKeyboardButton(BUTTONS['faq'], callback_data='faq')],
                [InlineKeyboardButton(BUTTONS['full_course'], callback_data='full_course')],
                [InlineKeyboardButton(BUTTONS['online_training'], callback_data='online_training')],
                [InlineKeyboardButton(BUTTONS['contact_support'], callback_data='contact_support')],
                [InlineKeyboardButton(BUTTONS['admin_panel'], callback_data='admin_panel')]
            ]
            return InlineKeyboardMarkup(keyboard)
        except Exception as e:
            # Fallback - –ø—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é
            keyboard = [
                [InlineKeyboardButton("üèãÔ∏è‚Äç‚ôÄÔ∏è –ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", callback_data='start_training')],
                [InlineKeyboardButton("‚ùì FAQ", callback_data='faq')],
                [InlineKeyboardButton("‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data='admin_panel')]
            ]
            return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def timezone_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞"""
        keyboard = [
            [
                InlineKeyboardButton("üá∑üá∫ –ú–æ—Å–∫–≤–∞", callback_data='timezone_Europe/Moscow'),
                InlineKeyboardButton("üá∫üá¶ –ö–∏–µ–≤", callback_data='timezone_Europe/Kiev')
            ],
            [
                InlineKeyboardButton("üáßüáæ –ú–∏–Ω—Å–∫", callback_data='timezone_Europe/Minsk'),
                InlineKeyboardButton("üá∞üáø –ê–ª–º–∞—Ç—ã", callback_data='timezone_Asia/Almaty')
            ],
            [
                InlineKeyboardButton("üá∫üá∏ –ù—å—é-–ô–æ—Ä–∫", callback_data='timezone_America/New_York'),
                InlineKeyboardButton("üá¨üáß –õ–æ–Ω–¥–æ–Ω", callback_data='timezone_Europe/London')
            ],
            [
                InlineKeyboardButton("üá©üá™ –ë–µ—Ä–ª–∏–Ω", callback_data='timezone_Europe/Berlin'),
                InlineKeyboardButton("üá´üá∑ –ü–∞—Ä–∏–∂", callback_data='timezone_Europe/Paris')
            ],
            [
                InlineKeyboardButton("üáØüáµ –¢–æ–∫–∏–æ", callback_data='timezone_Asia/Tokyo'),
                InlineKeyboardButton("üá¶üá∫ –°–∏–¥–Ω–µ–π", callback_data='timezone_Australia/Sydney')
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def yes_no_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –î–∞/–ù–µ—Ç"""
        keyboard = [
            [
                InlineKeyboardButton(BUTTONS['yes'], callback_data='yes'),
                InlineKeyboardButton(BUTTONS['no'], callback_data='no')
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def course_packages() -> InlineKeyboardMarkup:
        """–ü–∞–∫–µ—Ç—ã –∫—É—Ä—Å–æ–≤"""
        keyboard = [
            [InlineKeyboardButton("üíé –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫—É—Ä—Å - 1990‚ÇΩ", callback_data='package_basic')],
            [InlineKeyboardButton(BUTTONS['back_to_menu'], callback_data='main_menu')]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def training_packages() -> InlineKeyboardMarkup:
        """–ü–∞–∫–µ—Ç—ã –æ–Ω–ª–∞–π–Ω-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"""
        keyboard = [
            [InlineKeyboardButton("üíª 1 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ - 500‚ÇΩ", callback_data='training_single')],
            [InlineKeyboardButton("üìÖ 5 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ - 2000‚ÇΩ", callback_data='training_pack5')],
            [InlineKeyboardButton("üèãÔ∏è‚Äç‚ôÄÔ∏è 10 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ - 3500‚ÇΩ", callback_data='training_pack10')],
            [InlineKeyboardButton("üî• –ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –º–µ—Å—è—Ü - 5000‚ÇΩ", callback_data='training_unlimited')],
            [InlineKeyboardButton(BUTTONS['back_to_menu'], callback_data='main_menu')]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def rating_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –æ—Ü–µ–Ω–∫–∏"""
        keyboard = [
            [
                InlineKeyboardButton("‚≠ê", callback_data='rating_1'),
                InlineKeyboardButton("‚≠ê‚≠ê", callback_data='rating_2'),
                InlineKeyboardButton("‚≠ê‚≠ê‚≠ê", callback_data='rating_3'),
                InlineKeyboardButton("‚≠ê‚≠ê‚≠ê‚≠ê", callback_data='rating_4'),
                InlineKeyboardButton("‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê", callback_data='rating_5')
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def contact_keyboard() -> ReplyKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞"""
        keyboard = [
            [KeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True)],
            [KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")]
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
    
    @staticmethod
    def location_keyboard() -> ReplyKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–∫–∞—Ü–∏–∏"""
        keyboard = [
            [KeyboardButton("üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é", request_location=True)],
            [KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")]
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
    
    @staticmethod
    def admin_user_actions(user_id: int) -> InlineKeyboardMarkup:
        """–î–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
        keyboard = [
            [InlineKeyboardButton("üì® –ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data=f'admin_message_{user_id}')],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='admin_users')]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def pagination_menu(current_page: int, total_pages: int, prefix: str) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
        keyboard = []
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        nav_buttons = []
        if current_page > 1:
            nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f'{prefix}_page_{current_page-1}'))
        
        nav_buttons.append(InlineKeyboardButton(f"{current_page}/{total_pages}", callback_data='noop'))
        
        if current_page < total_pages:
            nav_buttons.append(InlineKeyboardButton("‚û°Ô∏è", callback_data=f'{prefix}_page_{current_page+1}'))
        
        if nav_buttons:
            keyboard.append(nav_buttons)
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='admin_menu')])
        
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def confirmation_menu(action: str) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f'confirm_{action}'),
                InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data='cancel_action')
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    
    @staticmethod
    def start_registration_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        keyboard = [
            [InlineKeyboardButton("üöÄ –ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data='start_registration')]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def back_to_main() -> InlineKeyboardMarkup:
        """–ü—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        try:
            keyboard = [
                [InlineKeyboardButton(BUTTONS['back_to_menu'], callback_data='main_menu')]
            ]
            return InlineKeyboardMarkup(keyboard)
        except Exception as e:
            # Fallback - –ø—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é
            keyboard = [
                [InlineKeyboardButton("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')]
            ]
            return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def name_input_keyboard() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏"""
        keyboard = [
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", callback_data='back_to_registration_start')]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def phone_input_keyboard() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
        keyboard = [
            [InlineKeyboardButton("‚ùå –ù–µ —Ö–æ—á—É –≤–≤–æ–¥–∏—Ç—å –Ω–æ–º–µ—Ä", callback_data='skip_phone')]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def difficulty_rating_menu(day: int) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –æ—Ü–µ–Ω–∫–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"""
        keyboard = [
            [InlineKeyboardButton("üòä –û—á–µ–Ω—å –ª–µ–≥–∫–æ", callback_data=f'difficulty_1_{day}')],
            [InlineKeyboardButton("üôÇ –õ–µ–≥–∫–æ", callback_data=f'difficulty_2_{day}')],
            [InlineKeyboardButton("üòê –ù–æ—Ä–º–∞–ª—å–Ω–æ", callback_data=f'difficulty_3_{day}')],
            [InlineKeyboardButton("üò∞ –°–ª–æ–∂–Ω–æ", callback_data=f'difficulty_4_{day}')],
            [InlineKeyboardButton("üòµ –û—á–µ–Ω—å —Å–ª–æ–∂–Ω–æ", callback_data=f'difficulty_5_{day}')],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='main_menu')]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def clarity_rating_menu(day: int) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –æ—Ü–µ–Ω–∫–∏ –ø–æ–Ω—è—Ç–Ω–æ—Å—Ç–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"""
        keyboard = [
            [InlineKeyboardButton("üòï –°–æ–≤—Å–µ–º –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ", callback_data=f'clarity_1_{day}')],
            [InlineKeyboardButton("üòê –°–ª–æ–∂–Ω–æ –ø–æ–Ω—è—Ç—å", callback_data=f'clarity_2_{day}')],
            [InlineKeyboardButton("üôÇ –ü–æ–Ω—è—Ç–Ω–æ", callback_data=f'clarity_3_{day}')],
            [InlineKeyboardButton("üòä –û—á–µ–Ω—å –ø–æ–Ω—è—Ç–Ω–æ", callback_data=f'clarity_4_{day}')],
            [InlineKeyboardButton("ü§© –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ", callback_data=f'clarity_5_{day}')],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=f'difficulty_1_{day}')]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def comments_menu(day: int) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ"""
        keyboard = [
            [InlineKeyboardButton("üí¨ –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", callback_data=f'add_comment_{day}')],
            [InlineKeyboardButton("‚è≠Ô∏è –ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤", callback_data=f'finish_feedback_{day}')],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=f'clarity_1_{day}')]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def course_completion_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫—É—Ä—Å–∞"""
        keyboard = [
            [InlineKeyboardButton("üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", callback_data='view_results')],
            [InlineKeyboardButton("üíé –ü–æ–ª–Ω—ã–π –∫—É—Ä—Å", callback_data='full_course')],
            [InlineKeyboardButton("‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data='leave_review')],
            [InlineKeyboardButton("üîô –í –º–µ–Ω—é", callback_data='main_menu')]
        ]
        return InlineKeyboardMarkup(keyboard)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä
keyboards = Keyboards()
